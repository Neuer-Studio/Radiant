#type vertex
#version 430

layout(location = 0) in vec3 a_Position;
layout(location = 1) in vec2 a_TexCoord;

out vec2 v_TexCoord;

void main()
{
	vec4 position = vec4(a_Position.xy, 0.9999999, 1.0);
	v_TexCoord = a_TexCoord;
	gl_Position = position;
}

#type fragment
#version 430

layout(location = 0) out vec4 o_Color;

in vec2 v_TexCoord;

uniform sampler2DMS u_Texture;
uniform float u_Exposure;
uniform uint u_TextureSamples;

vec4 MultiSampleTexture(sampler2DMS tex, ivec2 texCoord, uint samples)
{
    vec4 result = vec4(0.0);
    for (int i = 0; i < samples; i++)
        result += texelFetch(tex, texCoord, i);

    result /= float(samples);
    return result;
}


void main()
{
   
	ivec2 texSize = textureSize(u_Texture);
	ivec2 texCoord = ivec2(v_TexCoord * texSize);
	vec4 msColor = MultiSampleTexture(u_Texture, texCoord, u_TextureSamples);

	vec3 color = msColor.rgb * u_Exposure;
    o_Color = vec4(color, 1.0);
}
